{
  "name": "cucumberjs-allure-reporter",
  "version": "1.0.0",
  "description": "Allure Framework reporter for Cucumber JS",
  "license": "ISC",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/allure-framework/cucumberjs-allure-reporter.git"
  },
  "dependencies": {
    "allure-js-commons": "1.0.2"
  },
  "devDependencies": {
    "cucumber": "0.9.1",
    "protractor": "3.0.0",
    "protractor-cucumber-framework": "0.3.0"
  },
  "gitHead": "ab68b5d591971fc43bd411249eff9748d109f660",
  "readme": "# Allure report version supported : 1.4.15\n\n## HOW TO USE IT?\n\nAdd `reporter.js` file in feature packages with:\n\n```js\nvar reporter = require('cucumberjs-allure-reporter');\nreporter.config(\n    {...}\n);\nmodule.exports = reporter;\n```\n\nSupported configuration keys:\n* *targetDir* - directory where allure will save results xml's\n* *labels* - custom label matchers, example:\n\n    ```js\n    labels : {\n            feature: [/sprint-(\\d*)/, /release-(\\d)/, /area-(.*)/],\n            issue: [/(bug-\\d*)/]\n        }\n    ```\n   \nPossible labels:\n* feature\n* story\n* severity\n* language\n* framework\n* issue\n* testId\n* host\n* thread    \n    \n## Generate HTML report from Allure results\n\nThe Reporter will generate xml files inside of a `targetDir`, then we need to generate HTML out of them. You can\nuse Maven for that. Copy ready-to-use `pom.xml` from `node_modules/cucumberjs-allure-reporter` and run:\n\n```mvn site -Dallure.results_pattern=allure-results```\n\nIt will put HTMLs into `target/site/allure-maven-plugin` folder. To serve them via localhost:1234 use:\n\n```mvn jetty:run -Djetty.port=1234```\n\n\nOtherwise choose [one of other ways to generate HTML](https://github.com/allure-framework/allure-core/wiki#generating-a-report).\n\n## For Developers \n### Run test examples with:\n```./node_modules/.bin/cucumber.js features/<FEATURE_NAME>.feature```\n   \n   Available tests:\n   * basic -> basic test results\n   * description -> scenario description test\n   * label -> cucumber tags (currently labels are not visible in generated report ...)\n   * exception -> test throws exception\n   * attachments -> docStrings and dataTable tests\n   * scenarioOutline -> scenario outline tests\n   * subSteps -> steps add sub steps using allure object\n   \nor run everything with:\n   ```./node_modules/.bin/cucumber.js features/```   \n   \n\nTo check protractor screenshot test install `protractor` and `protractor-cucumber-framework` and then run tests:\n```./node_modules/protractor/bin/protractor miscellaneous/protractorScreenshot/conf.js```\n\nTo check basic logging run:\n```./node_modules/.bin/cucumber.js miscellaneous/logging```\n\nTo check basic configuration run:\n```./node_modules/.bin/cucumber.js miscellaneous/configuration```\n\nTo check custom tags run:\n```./node_modules/.bin/cucumber.js miscellaneous/customTagNames```\n\n## Release notes\n02/12/2015 version 1.0.0\n* plugin updated to work with cucumber 0.9.1\n\n01/09/2015 version 0.0.1\n* first release",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/allure-framework/cucumberjs-allure-reporter/issues"
  },
  "homepage": "https://github.com/allure-framework/cucumberjs-allure-reporter#readme",
  "_id": "cucumberjs-allure-reporter@1.0.0",
  "_shasum": "5e888fb0ba936d51fb2f8ff403a30713d1de8627",
  "_from": "git+https://github.com/shanahanjrs/cucumberjs-allure-reporter.git",
  "_resolved": "git+https://github.com/shanahanjrs/cucumberjs-allure-reporter.git#ab68b5d591971fc43bd411249eff9748d109f660"
}
