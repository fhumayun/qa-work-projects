<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190320 16:41:20.831" generator="Robot 3.1.1 (Python 2.7.15 on darwin)">
<suite source="/Users/Mack/Development/strax-qa/strax-rf-automation/API/Tests/newAPI.robot" id="s1" name="newAPI">
<test id="s1-t1" name="Get Requests">
<kw name="Create Session" library="ExtendedRequestsLibrary">
<doc>Create and return a HTTP session object to a server.</doc>
<arguments>
<arg>localhost</arg>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20190320 16:41:21.441" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190320 16:41:21.442" starttime="20190320 16:41:21.441"></status>
</kw>
<kw name="Get Request" library="ExtendedRequestsLibrary">
<doc>Send a GET request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/participants</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190320 16:41:21.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190320 16:41:21.475" starttime="20190320 16:41:21.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190320 16:41:21.476" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190320 16:41:21.477" starttime="20190320 16:41:21.475"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190320 16:41:21.478" level="INFO">${json} = [{u'status': True, u'_id': u'5b04522465a2bc002d0693cc', u'firstName': u'Mack', u'color': u'#FF0000', u'lastName': u'Maney', u'subunits': [], u'incident': u'Event 1', u'badgeNumber': u'mm115', u'access...</msg>
<status status="PASS" endtime="20190320 16:41:21.478" starttime="20190320 16:41:21.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<msg timestamp="20190320 16:41:21.479" level="INFO">[{u'status': True, u'_id': u'5b04522465a2bc002d0693cc', u'firstName': u'Mack', u'color': u'#FF0000', u'lastName': u'Maney', u'subunits': [], u'incident': u'Event 1', u'badgeNumber': u'mm115', u'accessLevel': u'4', u'loginId': u'mack@ee.io'}]</msg>
<status status="PASS" endtime="20190320 16:41:21.480" starttime="20190320 16:41:21.479"></status>
</kw>
<status status="PASS" endtime="20190320 16:41:21.480" critical="yes" starttime="20190320 16:41:21.440"></status>
</test>
<test id="s1-t2" name="Post With File">
<kw name="Create Session" library="ExtendedRequestsLibrary">
<doc>Create and return a HTTP session object to a server.</doc>
<arguments>
<arg>localhost</arg>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20190320 16:41:21.482" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190320 16:41:21.482" starttime="20190320 16:41:21.482"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json; charset=utf-8</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20190320 16:41:21.484" level="INFO">&amp;{headers} = { Content-Type=application/json; charset=utf-8 }</msg>
<status status="PASS" endtime="20190320 16:41:21.484" starttime="20190320 16:41:21.483"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_path}participants-add.json</arg>
</arguments>
<assign>
<var>${file_data}</var>
</assign>
<msg timestamp="20190320 16:41:21.486" html="yes" level="INFO">Getting file '&lt;a href="file:///Users/Mack/Development/strax-qa/strax-rf-automation/API/Utils/testData/participants-add.json"&gt;/Users/Mack/Development/strax-qa/strax-rf-automation/API/Utils/testData/participants-add.json&lt;/a&gt;'.</msg>
<msg timestamp="20190320 16:41:21.488" level="INFO">${file_data} = {
  "accessLevel": "4",
  "accountDocId": "000000000000000000000002",
  "address": {
    "geo": {
      "coordinates": []
    }
  },
  "badgeNumber": "LL123",
  "businessPhone": "",
  "color": "#FF000...</msg>
<status status="PASS" endtime="20190320 16:41:21.488" starttime="20190320 16:41:21.484"></status>
</kw>
<kw name="Post Request" library="ExtendedRequestsLibrary">
<doc>Send a POST request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/participants/${partDocId}</arg>
<arg>data=${file_data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190320 16:41:21.496" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20190320 16:41:21.496" starttime="20190320 16:41:21.489"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190320 16:41:21.497" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190320 16:41:21.497" level="FAIL">400 != 200</msg>
<status status="FAIL" endtime="20190320 16:41:21.498" starttime="20190320 16:41:21.497"></status>
</kw>
<status status="FAIL" endtime="20190320 16:41:21.498" critical="yes" starttime="20190320 16:41:21.481">400 != 200</status>
</test>
<test id="s1-t3" name="Verify User Has Been Created">
<kw type="setup" name="Begin Web Test" library="setup">
<kw name="Open Browser" library="ExtendedSelenium2Library">
<doc>Opens a new browser instance to given URL.</doc>
<arguments>
<arg>about:blank</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20190320 16:41:21.500" level="INFO">Opening browser 'gc' to base url 'about:blank'</msg>
<kw name="Capture Page Screenshot" library="ExtendedSelenium2Library">
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="FAIL" endtime="20190320 16:41:22.044" starttime="20190320 16:41:22.043"></status>
</kw>
<msg timestamp="20190320 16:41:22.044" level="WARN">Keyword 'Capture Page Screenshot' could not be run on failure: Execution terminated by signal</msg>
<status status="FAIL" endtime="20190320 16:41:22.045" starttime="20190320 16:41:21.500"></status>
</kw>
<status status="FAIL" endtime="20190320 16:41:22.050" starttime="20190320 16:41:21.500"></status>
</kw>
<kw type="teardown" name="End Web Test" library="setup">
<kw name="Close Browser" library="ExtendedSelenium2Library">
<doc>Closes the current browser.</doc>
<status status="PASS" endtime="20190320 16:41:22.052" starttime="20190320 16:41:22.052"></status>
</kw>
<status status="PASS" endtime="20190320 16:41:22.053" starttime="20190320 16:41:22.051"></status>
</kw>
<doc>Verify User has been created via API POST Call</doc>
<tags>
<tag>Smoke</tag>
</tags>
<status status="FAIL" endtime="20190320 16:41:22.053" critical="yes" starttime="20190320 16:41:21.499">Setup failed:
Execution terminated by signal</status>
</test>
<test id="s1-t4" name="PUT Requests with Json Data">
<tags>
<tag>patch</tag>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" endtime="20190320 16:41:22.056" critical="yes" starttime="20190320 16:41:22.055">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t5" name="Delete Request With No Data">
<tags>
<tag>delete</tag>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" endtime="20190320 16:41:22.058" critical="yes" starttime="20190320 16:41:22.057">Test execution stopped due to a fatal error.</status>
</test>
<kw type="teardown" name="Delete All Sessions" library="ExtendedRequestsLibrary">
<doc>Removes all the session objects</doc>
<msg timestamp="20190320 16:41:22.061" level="INFO">Delete All Sessions</msg>
<status status="PASS" endtime="20190320 16:41:22.061" starttime="20190320 16:41:22.061"></status>
</kw>
<doc>API Test Suite w/ Selenium Validation

Strax Version: 2.0

Included Librarys
- ExtendedSelenium2Library
- ExtendedRequestsLibrary
- OperatingSystem
- Collections
- String
Additional Docs: /strax-rf-automation/Documentation

Run CMD: robot -d ../Logs newAPI.robot</doc>
<status status="FAIL" endtime="20190320 16:41:22.061" starttime="20190320 16:41:20.834"></status>
</suite>
<statistics>
<total>
<stat fail="4" pass="1">Critical Tests</stat>
<stat fail="4" pass="1">All Tests</stat>
</total>
<tag>
<stat info="combined" fail="2" combined="NOT robot:exit" pass="1">NOT robot:exit</stat>
<stat fail="1" pass="0">delete</stat>
<stat fail="1" pass="0">patch</stat>
<stat fail="2" pass="0">robot:exit</stat>
<stat fail="1" pass="0">Smoke</stat>
</tag>
<suite>
<stat fail="4" id="s1" name="newAPI" pass="1">newAPI</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20190320 16:41:22.044" level="WARN">Keyword 'Capture Page Screenshot' could not be run on failure: Execution terminated by signal</msg>
</errors>
</robot>
